/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package e.kasir;

import java.sql.Connection;
import java.sql.DriverManager;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;

/**
 *
 * @author ACER
 */
public class Barang_Masuk extends javax.swing.JFrame {

    DefaultTableModel model;
    
    public Barang_Masuk() {
        initComponents();
        setTitle("Barang Masuk");
        setLocationRelativeTo(null);
        tampilDataBarangMasukAwal();
        // Tambahkan mouse listener agar data dari tabel masuk ke field input saat diklik
        tblBarangMasuk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = tblBarangMasuk.getSelectedRow();
                if (row != -1) {
                    try {
                         java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd");
                         java.util.Date parsedDate = sdf.parse(tblBarangMasuk.getValueAt(row, 0).toString());
    datechooser.setDate(parsedDate);
} catch (java.text.ParseException e) {
    e.printStackTrace();
}
                    
                    txtNamaBarang.setText(tblBarangMasuk.getValueAt(row, 1).toString());
                    // Hilangkan "Rp" dan karakter non-digit pada harga
                    String hargaStr = tblBarangMasuk.getValueAt(row, 2).toString().replace("Rp", "").replace(".", "").replace(",", "").replaceAll("[^0-9]", "").trim();
                    txtHargaBarang.setText(hargaStr);
                    txtTotalBarang.setText(tblBarangMasuk.getValueAt(row, 3).toString());
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNamaBarang = new javax.swing.JTextField();
        txtTotalBarang = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBarangMasuk = new javax.swing.JTable();
        txtHargaBarang = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        datechooser = new com.toedter.calendar.JDateChooser();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        staf_gudang = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(72, 166, 167));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nama Barang");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Tanggal Masuk");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Total Barang");

        btnEdit.setText("EDIT");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSimpan.setText("SIMPAN");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        tblBarangMasuk.setBackground(new java.awt.Color(154, 203, 208));
        tblBarangMasuk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tanggal masuk", "Nama barang", "Harga barang", "Total barang"
            }
        ));
        jScrollPane1.setViewportView(tblBarangMasuk);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Harga Barang");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalBarang))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHargaBarang))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNamaBarang, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                            .addComponent(datechooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEdit, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSimpan, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(22, 22, 22))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datechooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtHargaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtTotalBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))
        );

        jMenu1.setText("Back");

        staf_gudang.setText("Staf Gudang");
        staf_gudang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staf_gudangActionPerformed(evt);
            }
        });
        jMenu1.add(staf_gudang);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // Logic simpan barang masuk
        java.util.Date selectedDate = datechooser.getDate();
if (selectedDate == null) {
    JOptionPane.showMessageDialog(this, "Tanggal Masuk wajib diisi!", "Peringatan", JOptionPane.WARNING_MESSAGE);
    return;
}
java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd");
String tanggalMasuk = sdf.format(selectedDate);

        String namaBarang = txtNamaBarang.getText().trim();
        String hargaStr = txtHargaBarang.getText().trim();
        String jumlahStr = txtTotalBarang.getText().trim();
        if (tanggalMasuk.isEmpty() || namaBarang.isEmpty() || hargaStr.isEmpty() || jumlahStr.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Semua field wajib diisi!", "Peringatan", javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }
        double harga = 0;
        int jumlah = 0;
        try {
            harga = Double.parseDouble(hargaStr);
            jumlah = Integer.parseInt(jumlahStr);
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Harga dan Jumlah harus berupa angka!", "Peringatan", javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (harga <= 0 || jumlah <= 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Harga dan Jumlah harus lebih dari 0!", "Peringatan", javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }
        int konfirmasi = javax.swing.JOptionPane.showConfirmDialog(this, "Apakah data sudah benar dan ingin disimpan?", "Konfirmasi", javax.swing.JOptionPane.YES_NO_OPTION);
        if (konfirmasi != javax.swing.JOptionPane.YES_OPTION) {
            return;
        }
        // Simpan ke database
        try {
            java.sql.Connection conn = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/sistem_gudang_kasir_db", "root", "");
            String sql = "INSERT INTO barang_masuk (nama_barang, tanggal_masuk, jumlah, harga) VALUES (?, ?, ?, ?)";
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, namaBarang);
            pst.setString(2, tanggalMasuk);
            pst.setInt(3, jumlah);
            pst.setDouble(4, harga);
            pst.executeUpdate();
            javax.swing.JOptionPane.showMessageDialog(this, "Data barang masuk berhasil disimpan.");
            pst.close();
            conn.close();
            // Tambahkan data baru ke tabel tanpa reload seluruh data
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tblBarangMasuk.getModel();
            Object[] row = {
                tanggalMasuk,
                namaBarang,
                String.format("Rp %,.0f", harga),
                jumlah
            };
            model.addRow(row);
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Gagal menyimpan data: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void staf_gudangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staf_gudangActionPerformed
        // TODO add your handling code here:
        staf_gudang newWin = new staf_gudang();
        newWin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_staf_gudangActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = tblBarangMasuk.getSelectedRow();
        if (selectedRow == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Pilih data yang ingin dihapus!", "Peringatan", javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }
        int konfirmasi = javax.swing.JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus data ini?", "Konfirmasi", javax.swing.JOptionPane.YES_NO_OPTION);
        if (konfirmasi != javax.swing.JOptionPane.YES_OPTION) {
            return;
        }
        String tanggalMasuk = tblBarangMasuk.getValueAt(selectedRow, 0).toString();
        String namaBarang = tblBarangMasuk.getValueAt(selectedRow, 1).toString();
        try {
            java.sql.Connection conn = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/sistem_gudang_kasir_db", "root", "");
            String sql = "DELETE FROM barang_masuk WHERE tanggal_masuk=? AND nama_barang=? LIMIT 1";
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, tanggalMasuk);
            pst.setString(2, namaBarang);
            pst.executeUpdate();
            pst.close();
            conn.close();
            javax.swing.JOptionPane.showMessageDialog(this, "Data berhasil dihapus.");
            // Hapus baris dari tabel tanpa reload seluruh data
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tblBarangMasuk.getModel();
            model.removeRow(selectedRow);
        } catch (Exception ex) {
             javax.swing.JOptionPane.showMessageDialog(this, "Gagal menghapus data: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        int selectedRow = tblBarangMasuk.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin diedit!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Ambil data lama (kunci pencarian)
        String tanggalLama = tblBarangMasuk.getValueAt(selectedRow, 0).toString();
        String namaLama = tblBarangMasuk.getValueAt(selectedRow, 1).toString();

        // Ambil data baru dari field input
       java.util.Date selectedDate = datechooser.getDate();
if (selectedDate == null) {
    JOptionPane.showMessageDialog(this, "Tanggal Masuk wajib diisi!", "Peringatan", JOptionPane.WARNING_MESSAGE);
    return;
}
java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd");
String tanggalBaru = sdf.format(selectedDate);

        String namaBaru = txtNamaBarang.getText().trim();
        String hargaStr = txtHargaBarang.getText().trim();
        String jumlahStr = txtTotalBarang.getText().trim();

        if (tanggalBaru.isEmpty() || namaBaru.isEmpty() || hargaStr.isEmpty() || jumlahStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field wajib diisi!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        double harga;
        int jumlah;
        try {
            harga = Double.parseDouble(hargaStr);
            jumlah = Integer.parseInt(jumlahStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Harga dan Jumlah harus berupa angka!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (harga <= 0 || jumlah <= 0) {
            JOptionPane.showMessageDialog(this, "Harga dan Jumlah harus lebih dari 0!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int konfirmasi = JOptionPane.showConfirmDialog(this, "Apakah data sudah benar dan ingin diupdate?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (konfirmasi != JOptionPane.YES_OPTION) {
            return;
        }

        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/sistem_gudang_kasir_db", "root", "");
            String sql = "UPDATE barang_masuk SET tanggal_masuk=?, nama_barang=?, harga=?, jumlah=? WHERE tanggal_masuk=? AND nama_barang=? LIMIT 1";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, tanggalBaru);
            pst.setString(2, namaBaru);
            pst.setDouble(3, harga);
            pst.setInt(4, jumlah);
            pst.setString(5, tanggalLama);
            pst.setString(6, namaLama);

            int updated = pst.executeUpdate();
            pst.close();
            conn.close();

            if (updated > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil diupdate!");
                // Update baris di tabel tanpa reload seluruh tabel
                DefaultTableModel model = (DefaultTableModel) tblBarangMasuk.getModel();
                model.setValueAt(tanggalBaru, selectedRow, 0);
                model.setValueAt(namaBaru, selectedRow, 1);
                model.setValueAt(String.format("Rp %,.0f", harga), selectedRow, 2);
                model.setValueAt(jumlah, selectedRow, 3);
            } else {
                JOptionPane.showMessageDialog(this, "Data gagal diupdate!");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnEditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Barang_Masuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Barang_Masuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Barang_Masuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Barang_Masuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Barang_Masuk().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSimpan;
    private com.toedter.calendar.JDateChooser datechooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem staf_gudang;
    private javax.swing.JTable tblBarangMasuk;
    private javax.swing.JTextField txtHargaBarang;
    private javax.swing.JTextField txtNamaBarang;
    private javax.swing.JTextField txtTotalBarang;
    // End of variables declaration//GEN-END:variables

    // Method ini hanya dipanggil sekali saat form dibuka, tidak dipanggil setelah simpan/edit/hapus
    private void tampilDataBarangMasukAwal() {
        try {
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tblBarangMasuk.getModel();
            model.setRowCount(0);
            java.sql.Connection conn = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/sistem_gudang_kasir_db", "root", "");
            java.sql.Statement st = conn.createStatement();
            java.sql.ResultSet rs = st.executeQuery("SELECT tanggal_masuk, nama_barang, harga, jumlah FROM barang_masuk ORDER BY masuk_id DESC");
            while (rs.next()) {
                Object[] row = {
                    rs.getString("tanggal_masuk"),
                    rs.getString("nama_barang"),
                    String.format("Rp %,.0f", rs.getDouble("harga")),
                    rs.getInt("jumlah")
                };
                model.addRow(row);
            }
            rs.close();
            st.close();
            conn.close();
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Gagal menampilkan data: " + ex.getMessage());
        }
    }

    // Method untuk refresh tabel secara realtime
    private void tampilDataBarangMasuk() {
        try {
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tblBarangMasuk.getModel();
            model.setRowCount(0);
            java.sql.Connection conn = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/sistem_gudang_kasir_db", "root", "");
            java.sql.Statement st = conn.createStatement();
            java.sql.ResultSet rs = st.executeQuery("SELECT tanggal_masuk, nama_barang, harga, jumlah FROM barang_masuk ORDER BY masuk_id DESC");
            while (rs.next()) {
                Object[] row = {
                    rs.getString("tanggal_masuk"),
                    rs.getString("nama_barang"),
                    String.format("Rp %,.0f", rs.getDouble("harga")),
                    rs.getInt("jumlah")
                };
                model.addRow(row);
            }
            rs.close();
            st.close();
            conn.close();
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Gagal menampilkan data: " + ex.getMessage());
        }
    }

    //

   
}
